<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="14" passed="11" failed="2" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-11-16T16:16:09 IST" name="Suite" finished-at="2022-11-16T16:17:07 IST" duration-ms="58712">
    <groups>
    </groups>
    <test started-at="2022-11-16T16:16:09 IST" name="Test" finished-at="2022-11-16T16:17:07 IST" duration-ms="58712">
      <class name="tests.LoginTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.LoginTest@74e52303]" started-at="2022-11-16T16:16:11 IST" name="setup" finished-at="2022-11-16T16:16:15 IST" duration-ms="4470" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginWithValidCredentials(java.lang.String,java.lang.String)[pri:1, instance:tests.LoginTest@74e52303]" started-at="2022-11-16T16:16:15 IST" name="loginWithValidCredentials" data-provider="dataSupplierFromExcelFile" finished-at="2022-11-16T16:16:16 IST" duration-ms="1318" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[amotooricap9@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithValidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTest@74e52303]" started-at="2022-11-16T16:16:16 IST" name="tearDown" finished-at="2022-11-16T16:16:17 IST" duration-ms="417" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.LoginTest@74e52303]" started-at="2022-11-16T16:16:17 IST" name="setup" finished-at="2022-11-16T16:16:19 IST" duration-ms="2663" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginWithValidCredentials(java.lang.String,java.lang.String)[pri:1, instance:tests.LoginTest@74e52303]" started-at="2022-11-16T16:16:19 IST" name="loginWithValidCredentials" data-provider="dataSupplierFromExcelFile" finished-at="2022-11-16T16:16:21 IST" duration-ms="1160" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[amotooricap1@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithValidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTest@74e52303]" started-at="2022-11-16T16:16:21 IST" name="tearDown" finished-at="2022-11-16T16:16:21 IST" duration-ms="304" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.LoginTest@74e52303]" started-at="2022-11-16T16:16:21 IST" name="setup" finished-at="2022-11-16T16:16:23 IST" duration-ms="2234" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginWithValidCredentials(java.lang.String,java.lang.String)[pri:1, instance:tests.LoginTest@74e52303]" started-at="2022-11-16T16:16:23 IST" name="loginWithValidCredentials" data-provider="dataSupplierFromExcelFile" finished-at="2022-11-16T16:16:24 IST" duration-ms="1366" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[amotooricap3@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithValidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTest@74e52303]" started-at="2022-11-16T16:16:24 IST" name="tearDown" finished-at="2022-11-16T16:16:25 IST" duration-ms="364" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.LoginTest@74e52303]" started-at="2022-11-16T16:16:25 IST" name="setup" finished-at="2022-11-16T16:16:27 IST" duration-ms="2627" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginWithInvalidEmailAndValidPassword()[pri:2, instance:tests.LoginTest@74e52303]" started-at="2022-11-16T16:16:27 IST" name="loginWithInvalidEmailAndValidPassword" finished-at="2022-11-16T16:16:29 IST" depends-on-methods="tests.LoginTest.loginWithValidCredentials" duration-ms="1317" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithInvalidEmailAndValidPassword -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTest@74e52303]" started-at="2022-11-16T16:16:29 IST" name="tearDown" finished-at="2022-11-16T16:16:29 IST" duration-ms="385" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.LoginTest@74e52303]" started-at="2022-11-16T16:16:29 IST" name="setup" finished-at="2022-11-16T16:16:31 IST" duration-ms="2296" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginWithValidEmailAndInvalidPassword()[pri:3, instance:tests.LoginTest@74e52303]" started-at="2022-11-16T16:16:31 IST" name="loginWithValidEmailAndInvalidPassword" finished-at="2022-11-16T16:16:33 IST" depends-on-methods="tests.LoginTest.loginWithInvalidEmailAndValidPassword" duration-ms="1130" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithValidEmailAndInvalidPassword -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTest@74e52303]" started-at="2022-11-16T16:16:33 IST" name="tearDown" finished-at="2022-11-16T16:16:33 IST" duration-ms="370" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.LoginTest@74e52303]" started-at="2022-11-16T16:16:33 IST" name="setup" finished-at="2022-11-16T16:16:35 IST" duration-ms="2345" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginWithInvalidCredentials()[pri:4, instance:tests.LoginTest@74e52303]" started-at="2022-11-16T16:16:35 IST" name="loginWithInvalidCredentials" finished-at="2022-11-16T16:16:37 IST" duration-ms="1276" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithInvalidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTest@74e52303]" started-at="2022-11-16T16:16:37 IST" name="tearDown" finished-at="2022-11-16T16:16:37 IST" duration-ms="359" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.LoginTest@74e52303]" started-at="2022-11-16T16:16:37 IST" name="setup" finished-at="2022-11-16T16:16:39 IST" duration-ms="2371" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginWithoutProvidingAnyCredentials()[pri:5, instance:tests.LoginTest@74e52303]" started-at="2022-11-16T16:16:39 IST" name="loginWithoutProvidingAnyCredentials" finished-at="2022-11-16T16:16:40 IST" duration-ms="1017" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithoutProvidingAnyCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTest@74e52303]" started-at="2022-11-16T16:16:40 IST" name="tearDown" finished-at="2022-11-16T16:16:41 IST" duration-ms="354" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.LoginTest -->
      <class name="tests.RegisterTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.RegisterTest@72d1ad2e]" started-at="2022-11-16T16:16:41 IST" name="setup" finished-at="2022-11-16T16:16:43 IST" duration-ms="2314" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="registerWithMandatoryFields()[pri:1, instance:tests.RegisterTest@72d1ad2e]" started-at="2022-11-16T16:16:43 IST" name="registerWithMandatoryFields" finished-at="2022-11-16T16:16:45 IST" duration-ms="1965" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerWithMandatoryFields -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@72d1ad2e]" started-at="2022-11-16T16:16:45 IST" name="tearDown" finished-at="2022-11-16T16:16:45 IST" duration-ms="321" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.RegisterTest@72d1ad2e]" started-at="2022-11-16T16:16:45 IST" name="setup" finished-at="2022-11-16T16:16:49 IST" duration-ms="3270" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="registerWithAllFields()[pri:2, instance:tests.RegisterTest@72d1ad2e]" started-at="2022-11-16T16:16:49 IST" name="registerWithAllFields" finished-at="2022-11-16T16:16:51 IST" duration-ms="2110" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerWithAllFields -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@72d1ad2e]" started-at="2022-11-16T16:16:51 IST" name="tearDown" finished-at="2022-11-16T16:16:51 IST" duration-ms="348" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.RegisterTest@72d1ad2e]" started-at="2022-11-16T16:16:51 IST" name="setup" finished-at="2022-11-16T16:16:54 IST" duration-ms="2519" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="registerWithoutFillingAnyFieds()[pri:3, instance:tests.RegisterTest@72d1ad2e]" started-at="2022-11-16T16:16:54 IST" name="registerWithoutFillingAnyFieds" finished-at="2022-11-16T16:16:55 IST" duration-ms="1275" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerWithoutFillingAnyFieds -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@72d1ad2e]" started-at="2022-11-16T16:16:55 IST" name="tearDown" finished-at="2022-11-16T16:16:55 IST" duration-ms="373" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.RegisterTest@72d1ad2e]" started-at="2022-11-16T16:16:55 IST" name="setup" finished-at="2022-11-16T16:16:58 IST" duration-ms="2376" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="registerWithDuplicateEmailAddress()[pri:4, instance:tests.RegisterTest@72d1ad2e]" started-at="2022-11-16T16:16:58 IST" name="registerWithDuplicateEmailAddress" finished-at="2022-11-16T16:17:00 IST" duration-ms="1961" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerWithDuplicateEmailAddress -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@72d1ad2e]" started-at="2022-11-16T16:17:00 IST" name="tearDown" finished-at="2022-11-16T16:17:00 IST" duration-ms="319" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.RegisterTest -->
      <class name="tests.SearchTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.SearchTest@2d7275fc]" started-at="2022-11-16T16:17:00 IST" name="setup" finished-at="2022-11-16T16:17:03 IST" duration-ms="2639" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="searchForAValidProduct()[pri:1, instance:tests.SearchTest@2d7275fc]" started-at="2022-11-16T16:17:03 IST" name="searchForAValidProduct" finished-at="2022-11-16T16:17:03 IST" duration-ms="623" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertFalse(Assert.java:78)
at org.testng.Assert.assertFalse(Assert.java:88)
at tests.SearchTest.searchForAValidProduct(SearchTest.java:40)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:324)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:74)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:123)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:456)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:169)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:595)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:581)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchForAValidProduct -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.SearchTest@2d7275fc]" started-at="2022-11-16T16:17:03 IST" name="tearDown" finished-at="2022-11-16T16:17:04 IST" duration-ms="377" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.SearchTest@2d7275fc]" started-at="2022-11-16T16:17:04 IST" name="setup" finished-at="2022-11-16T16:17:06 IST" duration-ms="2404" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="searchWithAnInvalidProduct()[pri:2, instance:tests.SearchTest@2d7275fc]" started-at="2022-11-16T16:17:06 IST" name="searchWithAnInvalidProduct" finished-at="2022-11-16T16:17:07 IST" duration-ms="539" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [There is no product that matches the search criteria.] but found [There is no product that matches the search criteria.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [There is no product that matches the search criteria.] but found [There is no product that matches the search criteria.]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failEquals(Assert.java:1417)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:156)
at org.testng.Assert.assertNotEquals(Assert.java:2033)
at org.testng.Assert.assertNotEquals(Assert.java:2055)
at tests.SearchTest.searchWithAnInvalidProduct(SearchTest.java:50)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:324)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:74)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:123)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:456)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:169)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:595)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:581)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchWithAnInvalidProduct -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.SearchTest@2d7275fc]" started-at="2022-11-16T16:17:07 IST" name="tearDown" finished-at="2022-11-16T16:17:07 IST" duration-ms="313" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="searchWithoutEnteringProductDetails()[pri:3, instance:tests.SearchTest@2d7275fc]" started-at="2022-11-16T16:17:07 IST" name="searchWithoutEnteringProductDetails" finished-at="2022-11-16T16:17:07 IST" depends-on-methods="tests.SearchTest.searchForAValidProduct, tests.SearchTest.searchWithAnInvalidProduct" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method tests.SearchTest.searchWithoutEnteringProductDetails() on instance tests.SearchTest@2d7275fc depends on not successfully finished methods 
[tests.SearchTest.searchForAValidProduct() on instance tests.SearchTest@2d7275fc
tests.SearchTest.searchWithAnInvalidProduct() on instance tests.SearchTest@2d7275fc]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method tests.SearchTest.searchWithoutEnteringProductDetails() on instance tests.SearchTest@2d7275fc depends on not successfully finished methods 
[tests.SearchTest.searchForAValidProduct() on instance tests.SearchTest@2d7275fc
tests.SearchTest.searchWithAnInvalidProduct() on instance tests.SearchTest@2d7275fc]
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:150)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:324)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:74)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:123)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:456)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:169)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:595)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:581)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchWithoutEnteringProductDetails -->
      </class> <!-- tests.SearchTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
